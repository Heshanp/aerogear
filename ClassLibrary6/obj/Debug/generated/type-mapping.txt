org/jboss/aerogear/android/core/BuildConfig = Org.Jboss.Aerogear.Android.Core.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
org/jboss/aerogear/android/core/Callback = Org.Jboss.Aerogear.Android.Core.ICallback
  onFailure(Ljava/lang/Exception;)V = OnFailure(Java.Lang.Exception)
  onSuccess(Ljava/lang/Object;)V = OnSuccess(Java.Lang.Object)
org/jboss/aerogear/android/core/Config = Org.Jboss.Aerogear.Android.Core.IConfig
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)Lorg/jboss/aerogear/android/core/Config; = SetName(string)
org/jboss/aerogear/android/core/ConfigurationProvider = Org.Jboss.Aerogear.Android.Core.IConfigurationProvider
  newConfiguration()Lorg/jboss/aerogear/android/core/Config; = NewConfiguration()
org/jboss/aerogear/android/core/Provider = Org.Jboss.Aerogear.Android.Core.IProvider
  get([Ljava/lang/Object;)Ljava/lang/Object; = Get(params Java.Lang.Object[])
org/jboss/aerogear/android/core/ReadFilter = Org.Jboss.Aerogear.Android.Core.ReadFilter
  <init>()V = .ctor()
  getLimit()Ljava/lang/Integer; = Limit
  setLimit(Ljava/lang/Integer;)V = Limit
  getLinkUri()Ljava/net/URI; = LinkUri
  setLinkUri(Ljava/net/URI;)V = LinkUri
  getOffset()Ljava/lang/Integer; = Offset
  setOffset(Ljava/lang/Integer;)V = Offset
  getQuery()Ljava/lang/String; = Query
  getWhere()Lorg/json/JSONObject; = Where
  setWhere(Lorg/json/JSONObject;)V = Where
org/jboss/aerogear/android/core/RecordId = Org.Jboss.Aerogear.Android.Core.IRecordId
org/jboss/aerogear/android/core/reflection/FieldNotFoundException = Org.Jboss.Aerogear.Android.Core.Reflection.FieldNotFoundException
  <init>(Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, string)
org/jboss/aerogear/android/core/reflection/Property = Org.Jboss.Aerogear.Android.Core.Reflection.Property
  <init>(Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, string)
  getFieldName()Ljava/lang/String; = FieldName
  getType()Ljava/lang/Class; = Type
  getValue(Ljava/lang/Object;)Ljava/lang/Object; = GetValue(Java.Lang.Object)
  setValue(Ljava/lang/Object;Ljava/lang/Object;)V = SetValue(Java.Lang.Object, Java.Lang.Object)
org/jboss/aerogear/android/core/reflection/PropertyNotFoundException = Org.Jboss.Aerogear.Android.Core.Reflection.PropertyNotFoundException
  <init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, Java.Lang.Class, string)
org/jboss/aerogear/android/core/reflection/RecordIdNotFoundException = Org.Jboss.Aerogear.Android.Core.Reflection.RecordIdNotFoundException
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
org/jboss/aerogear/android/core/reflection/Scan = Org.Jboss.Aerogear.Android.Core.Reflection.Scan
  <init>()V = .ctor()
  findIdValueIn(Ljava/lang/Object;)Ljava/lang/String; = FindIdValueIn(Java.Lang.Object)
  recordIdFieldNameIn(Ljava/lang/Class;)Ljava/lang/String; = RecordIdFieldNameIn(Java.Lang.Class)
org/jboss/aerogear/android/unifiedpush/BuildConfig = Org.Jboss.Aerogear.Android.Unifiedpush.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMMessageReceiver = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMMessageReceiver
  <init>()V = .ctor()
  DEFAULT_MESSAGE_HANDLER_KEY = DefaultMessageHandlerKey
  NOTIFICATION_ID = NotificationId
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushConfiguration
  <init>()V = .ctor()
  getAlias()Ljava/lang/String; = Alias
  getCategories()Ljava/util/List; = Categories
  getDeviceToken()Ljava/lang/String; = DeviceToken
  getDeviceType()Ljava/lang/String; = DeviceType
  getOperatingSystem()Ljava/lang/String; = OperatingSystem
  getOsVersion()Ljava/lang/String; = OsVersion
  getPushServerURI()Ljava/net/URI; = PushServerURI
  getSecret()Ljava/lang/String; = Secret
  getSenderId()Ljava/lang/String; = SenderId
  getVariantID()Ljava/lang/String; = VariantID
  addCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = AddCategories(System.Collections.Generic.IList<string>)
  addCategory(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = AddCategory(string)
  buildRegistrar()Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushRegistrar; = BuildRegistrar()
  setAlias(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetAlias(string)
  setCategories([Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetCategories(params string[])
  setCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetCategories(System.Collections.Generic.IList<string>)
  setDeviceType(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetDeviceType(string)
  setOperatingSystem(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetOperatingSystem(string)
  setPushServerURI(Ljava/net/URI;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetPushServerURI(Java.Net.URI)
  setSecret(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetSecret(string)
  setSenderId(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetSenderId(string)
  setVariantID(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = SetVariantID(string)
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushConfiguration
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfigurationProvider = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushConfigurationProvider
  <init>()V = .ctor()
  newConfiguration()Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushConfiguration; = NewConfiguration()
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushJsonConfiguration
  <init>()V = .ctor()
  getAlias()Ljava/lang/String; = Alias
  getCategories()Ljava/util/List; = Categories
  getDeviceToken()Ljava/lang/String; = DeviceToken
  getDeviceType()Ljava/lang/String; = DeviceType
  getFileName()Ljava/lang/String; = FileName
  setFileName(Ljava/lang/String;)V = FileName
  getOperatingSystem()Ljava/lang/String; = OperatingSystem
  getOsVersion()Ljava/lang/String; = OsVersion
  getPushServerURI()Ljava/net/URI; = PushServerURI
  getSecret()Ljava/lang/String; = Secret
  getSenderId()Ljava/lang/String; = SenderId
  getVariantID()Ljava/lang/String; = VariantID
  addCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = AddCategories(System.Collections.Generic.IList<string>)
  addCategory(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = AddCategory(string)
  buildRegistrar()Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushRegistrar; = BuildRegistrar()
  loadConfigJson(Landroid/content/Context;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = LoadConfigJson(Android.Content.Context)
  setAlias(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetAlias(string)
  setCategories([Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetCategories(params string[])
  setCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetCategories(System.Collections.Generic.IList<string>)
  setDeviceType(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetDeviceType(string)
  setOperatingSystem(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetOperatingSystem(string)
  setSenderId(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = SetSenderId(string)
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushJsonConfiguration
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfigurationProvider = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushJsonConfigurationProvider
  <init>()V = .ctor()
  newConfiguration()Lorg/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushJsonConfiguration; = NewConfiguration()
org/jboss/aerogear/android/unifiedpush/fcm/AeroGearFCMPushRegistrar = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.AeroGearFCMPushRegistrar
  <init>(Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig;)V = .ctor(Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.UnifiedPushConfig)
  register(Landroid/content/Context;Lorg/jboss/aerogear/android/core/Callback;)V = Register(Android.Content.Context, Org.Jboss.Aerogear.Android.Core.ICallback)
  sendMetrics(Lorg/jboss/aerogear/android/unifiedpush/metrics/UnifiedPushMetricsMessage;Lorg/jboss/aerogear/android/core/Callback;)V = SendMetrics(Org.Jboss.Aerogear.Android.Unifiedpush.Metrics.UnifiedPushMetricsMessage, Org.Jboss.Aerogear.Android.Core.ICallback)
  setPasswordAuthentication(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/aerogear/android/pipe/http/HttpProvider;)V = SetPasswordAuthentication(string, string, Org.Jboss.Aerogear.Android.Pipe.Http.IHttpProvider)
  unregister(Landroid/content/Context;Lorg/jboss/aerogear/android/core/Callback;)V = Unregister(Android.Content.Context, Org.Jboss.Aerogear.Android.Core.ICallback)
org/jboss/aerogear/android/unifiedpush/fcm/FCMSharedPreferenceProvider = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.FCMSharedPreferenceProvider
  <init>()V = .ctor()
  get([Ljava/lang/Object;)Landroid/content/SharedPreferences; = Get(params Java.Lang.Object[])
org/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.UnifiedPushConfig
  <init>()V = .ctor()
  getAlias()Ljava/lang/String; = Alias
  getCategories()Ljava/util/List; = Categories
  getDeviceToken()Ljava/lang/String; = DeviceToken
  getDeviceType()Ljava/lang/String; = DeviceType
  getOperatingSystem()Ljava/lang/String; = OperatingSystem
  getOsVersion()Ljava/lang/String; = OsVersion
  getPushServerURI()Ljava/net/URI; = PushServerURI
  getSecret()Ljava/lang/String; = Secret
  getSenderId()Ljava/lang/String; = SenderId
  getVariantID()Ljava/lang/String; = VariantID
  addCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = AddCategories(System.Collections.Generic.IList<string>)
  addCategory(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = AddCategory(string)
  checkRequiredFields()V = CheckRequiredFields()
  setAlias(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetAlias(string)
  setCategories([Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetCategories(params string[])
  setCategories(Ljava/util/List;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetCategories(System.Collections.Generic.IList<string>)
  setDeviceType(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetDeviceType(string)
  setOperatingSystem(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetOperatingSystem(string)
  setPushServerURI(Ljava/net/URI;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetPushServerURI(Java.Net.URI)
  setSecret(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetSecret(string)
  setSenderId(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetSenderId(string)
  setVariantID(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushConfig; = SetVariantID(string)
org/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushInstanceIDListenerService = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.UnifiedPushInstanceIDListenerService
  <init>()V = .ctor()
org/jboss/aerogear/android/unifiedpush/fcm/UnifiedPushMessage = Org.Jboss.Aerogear.Android.Unifiedpush.Fcm.IUnifiedPushMessage
  ALERT_KEY = AlertKey
  PUSH_MESSAGE_ID = PushMessageId
org/jboss/aerogear/android/unifiedpush/MessageHandler = Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler
  onMessage(Landroid/content/Context;Landroid/os/Bundle;)V = OnMessage(Android.Content.Context, Android.OS.Bundle)
org/jboss/aerogear/android/unifiedpush/metrics/MetricsMessage = Org.Jboss.Aerogear.Android.Unifiedpush.Metrics.IMetricsMessage
  getMessageId()Ljava/lang/String; = MessageId
org/jboss/aerogear/android/unifiedpush/metrics/MetricsSender = Org.Jboss.Aerogear.Android.Unifiedpush.Metrics.IMetricsSender
  sendMetrics(Lorg/jboss/aerogear/android/unifiedpush/metrics/MetricsMessage;Lorg/jboss/aerogear/android/core/Callback;)V = SendMetrics(Java.Lang.Object, Org.Jboss.Aerogear.Android.Core.ICallback)
org/jboss/aerogear/android/unifiedpush/metrics/UnifiedPushMetricsMessage = Org.Jboss.Aerogear.Android.Unifiedpush.Metrics.UnifiedPushMetricsMessage
  <init>(Landroid/os/Bundle;)V = .ctor(Android.OS.Bundle)
  <init>(Ljava/lang/String;)V = .ctor(string)
  getMessageId()Ljava/lang/String; = MessageId
org/jboss/aerogear/android/unifiedpush/OnPushRegistrarCreatedListener = Org.Jboss.Aerogear.Android.Unifiedpush.IOnPushRegistrarCreatedListener
  onPushRegistrarCreated(Lorg/jboss/aerogear/android/unifiedpush/PushConfiguration;Lorg/jboss/aerogear/android/unifiedpush/PushRegistrar;)V = OnPushRegistrarCreated(Org.Jboss.Aerogear.Android.Unifiedpush.PushConfiguration, Org.Jboss.Aerogear.Android.Unifiedpush.IPushRegistrar)
org/jboss/aerogear/android/unifiedpush/PushConfiguration = Org.Jboss.Aerogear.Android.Unifiedpush.PushConfiguration
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  getOnAuthenticationCreatedListeners()Ljava/util/Collection; = OnAuthenticationCreatedListeners
  addOnPushRegistrarCreatedListener(Lorg/jboss/aerogear/android/unifiedpush/OnPushRegistrarCreatedListener;)Lorg/jboss/aerogear/android/unifiedpush/PushConfiguration; = AddOnPushRegistrarCreatedListener(Org.Jboss.Aerogear.Android.Unifiedpush.IOnPushRegistrarCreatedListener)
  asRegistrar()Lorg/jboss/aerogear/android/unifiedpush/PushRegistrar; = AsRegistrar()
  buildRegistrar()Lorg/jboss/aerogear/android/unifiedpush/PushRegistrar; = BuildRegistrar()
  setName(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/PushConfiguration; = SetName(string)
  setOnPushRegistrarCreatedListeners(Ljava/util/Collection;)Lorg/jboss/aerogear/android/unifiedpush/PushConfiguration; = SetOnPushRegistrarCreatedListeners(System.Collections.Generic.ICollection<Org.Jboss.Aerogear.Android.Unifiedpush.IOnPushRegistrarCreatedListener>)
org/jboss/aerogear/android/unifiedpush/PushRegistrar = Org.Jboss.Aerogear.Android.Unifiedpush.IPushRegistrar
  register(Landroid/content/Context;Lorg/jboss/aerogear/android/core/Callback;)V = Register(Android.Content.Context, Org.Jboss.Aerogear.Android.Core.ICallback)
  unregister(Landroid/content/Context;Lorg/jboss/aerogear/android/core/Callback;)V = Unregister(Android.Content.Context, Org.Jboss.Aerogear.Android.Core.ICallback)
org/jboss/aerogear/android/unifiedpush/RegistrarManager = Org.Jboss.Aerogear.Android.Unifiedpush.RegistrarManager
  <init>()V = .ctor()
  config(Ljava/lang/String;Ljava/lang/Class;)Lorg/jboss/aerogear/android/unifiedpush/PushConfiguration; = Config(string, Java.Lang.Class)
  getRegistrar(Ljava/lang/String;)Lorg/jboss/aerogear/android/unifiedpush/PushRegistrar; = GetRegistrar(string)
  notifyHandlers(Landroid/content/Context;Landroid/os/Bundle;)V = NotifyHandlers(Android.Content.Context, Android.OS.Bundle)
  notifyHandlers(Landroid/content/Context;Landroid/os/Bundle;Lorg/jboss/aerogear/android/unifiedpush/MessageHandler;)V = NotifyHandlers(Android.Content.Context, Android.OS.Bundle, Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler)
  registerBackgroundThreadHandler(Lorg/jboss/aerogear/android/unifiedpush/MessageHandler;)V = RegisterBackgroundThreadHandler(Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler)
  registerConfigurationProvider(Ljava/lang/Class;Lorg/jboss/aerogear/android/core/ConfigurationProvider;)V = RegisterConfigurationProvider(Java.Lang.Class, Org.Jboss.Aerogear.Android.Core.IConfigurationProvider)
  registerMainThreadHandler(Lorg/jboss/aerogear/android/unifiedpush/MessageHandler;)V = RegisterMainThreadHandler(Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler)
  unregisterBackgroundThreadHandler(Lorg/jboss/aerogear/android/unifiedpush/MessageHandler;)V = UnregisterBackgroundThreadHandler(Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler)
  unregisterMainThreadHandler(Lorg/jboss/aerogear/android/unifiedpush/MessageHandler;)V = UnregisterMainThreadHandler(Org.Jboss.Aerogear.Android.Unifiedpush.IMessageHandler)
