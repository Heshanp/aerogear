org/jboss/aerogear/android/pipe/BuildConfig = Org.Jboss.Aerogear.Android.Pipe.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
org/jboss/aerogear/android/pipe/callback/AbstractActivityCallback = Org.Jboss.Aerogear.Android.Pipe.Callback.AbstractActivityCallback
  <init>([Ljava/lang/Object;)V = .ctor(params Java.Lang.Object[])
  getActivity()Landroid/app/Activity; = Activity
  setActivity(Landroid/app/Activity;)V = SetActivity(Android.App.Activity)
org/jboss/aerogear/android/pipe/callback/AbstractCallback = Org.Jboss.Aerogear.Android.Pipe.Callback.AbstractCallback
  <init>([Ljava/lang/Object;)V = .ctor(params Java.Lang.Object[])
org/jboss/aerogear/android/pipe/callback/AbstractFragmentCallback = Org.Jboss.Aerogear.Android.Pipe.Callback.AbstractFragmentCallback
  <init>([Ljava/lang/Object;)V = .ctor(params Java.Lang.Object[])
  getFragment()Landroid/app/Fragment; = Fragment
  setFragment(Landroid/app/Fragment;)V = SetFragment(Android.App.Fragment)
org/jboss/aerogear/android/pipe/callback/AbstractSupportFragmentCallback = Org.Jboss.Aerogear.Android.Pipe.Callback.AbstractSupportFragmentCallback
  <init>([Ljava/lang/Object;)V = .ctor(params Java.Lang.Object[])
  getSupportFragment()Landroid/support/v4/app/Fragment; = SupportFragment
  setSupportFragment(Landroid/support/v4/app/Fragment;)V = SetSupportFragment(Android.Support.V4.App.Fragment)
org/jboss/aerogear/android/pipe/http/HeaderAndBody = Org.Jboss.Aerogear.Android.Pipe.Http.HeaderAndBody
  <init>([BLjava/util/Map;)V = .ctor(byte[], System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  getBody()[B = GetBody()
  getHeader(Ljava/lang/String;)Ljava/lang/Object; = GetHeader(string)
  setHeader(Ljava/lang/String;Ljava/lang/Object;)V = SetHeader(string, Java.Lang.Object)
org/jboss/aerogear/android/pipe/http/HttpException = Org.Jboss.Aerogear.Android.Pipe.Http.HttpException
  <init>([BI)V = .ctor(byte[], int)
  <init>([BILjava/lang/String;)V = .ctor(byte[], int, string)
  <init>([BILjava/lang/String;Ljava/util/Map;)V = .ctor(byte[], int, string, System.Collections.Generic.IDictionary<string, string>)
  <init>([BILjava/util/Map;)V = .ctor(byte[], int, System.Collections.Generic.IDictionary<string, string>)
  getHeaders()Ljava/util/Map; = Headers
  getStatusCode()I = StatusCode
  getData()[B = GetData()
org/jboss/aerogear/android/pipe/http/HttpProvider = Org.Jboss.Aerogear.Android.Pipe.Http.IHttpProvider
  getUrl()Ljava/net/URL; = Url
  delete(Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Delete(string)
  get()Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Get()
  post([B)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Post(byte[])
  post(Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Post(string)
  put(Ljava/lang/String;[B)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Put(string, byte[])
  put(Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Put(string, string)
  setDefaultHeader(Ljava/lang/String;Ljava/lang/String;)V = SetDefaultHeader(string, string)
org/jboss/aerogear/android/pipe/http/HttpProviderFactory = Org.Jboss.Aerogear.Android.Pipe.Http.HttpProviderFactory
  <init>()V = .ctor()
  get([Ljava/lang/Object;)Lorg/jboss/aerogear/android/pipe/http/HttpProvider; = Get(params Java.Lang.Object[])
org/jboss/aerogear/android/pipe/http/HttpRestProvider = Org.Jboss.Aerogear.Android.Pipe.Http.HttpRestProvider
  <init>(Ljava/net/URL;)V = .ctor(Java.Net.URL)
  <init>(Ljava/net/URL;Ljava/lang/Integer;)V = .ctor(Java.Net.URL, Java.Lang.Integer)
  getUrl()Ljava/net/URL; = Url
  delete(Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Delete(string)
  get()Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Get()
  post([B)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Post(byte[])
  post(Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Post(string)
  put(Ljava/lang/String;[B)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Put(string, byte[])
  put(Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = Put(string, string)
  setDefaultHeader(Ljava/lang/String;Ljava/lang/String;)V = SetDefaultHeader(string, string)
org/jboss/aerogear/android/pipe/loader/AbstractPipeLoader = Org.Jboss.Aerogear.Android.Pipe.Loader.AbstractPipeLoader
  exception = Exception
  getException()Ljava/lang/Exception; = Exception
  hasException()Z = HasException
org/jboss/aerogear/android/pipe/loader/IdReadLoader = Org.Jboss.Aerogear.Android.Pipe.Loader.IdReadLoader
org/jboss/aerogear/android/pipe/loader/LoaderAdapter = Org.Jboss.Aerogear.Android.Pipe.Loader.LoaderAdapter
  getKlass()Ljava/lang/Class; = Klass
  getRequestBuilder()Lorg/jboss/aerogear/android/pipe/RequestBuilder; = RequestBuilder
  getResponseParser()Lorg/jboss/aerogear/android/pipe/ResponseParser; = ResponseParser
  getUrl()Ljava/net/URL; = Url
  onCreateLoader(ILandroid/os/Bundle;)Landroid/content/Loader; = OnCreateLoader(int, Android.OS.Bundle)
  onLoaderReset(Landroid/content/Loader;)V = OnLoaderReset(Android.Content.Loader)
  onLoadFinished(Landroid/content/Loader;Ljava/lang/Object;)V = OnLoadFinished(Android.Content.Loader, Java.Lang.Object)
  reset()V = Reset()
  setLoaderIds(Ljava/util/Map;)V = SetLoaderIds(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Java.Lang.Integer>>)
org/jboss/aerogear/android/pipe/loader/ReadLoader = Org.Jboss.Aerogear.Android.Pipe.Loader.ReadLoader
  loadInBackground()Ljava/lang/Object; = LoadInBackground()
org/jboss/aerogear/android/pipe/loader/RemoveLoader = Org.Jboss.Aerogear.Android.Pipe.Loader.RemoveLoader
  loadInBackground()Ljava/lang/Object; = LoadInBackground()
org/jboss/aerogear/android/pipe/loader/SaveLoader = Org.Jboss.Aerogear.Android.Pipe.Loader.SaveLoader
  loadInBackground()Ljava/lang/Object; = LoadInBackground()
org/jboss/aerogear/android/pipe/MarshallingConfig = Org.Jboss.Aerogear.Android.Pipe.MarshallingConfig
  <init>()V = .ctor()
  getDataRoot()Ljava/lang/String; = DataRoot
  setDataRoot(Ljava/lang/String;)V = DataRoot
  getEncoding()Ljava/nio/charset/Charset; = Encoding
  setEncoding(Ljava/nio/charset/Charset;)V = Encoding
org/jboss/aerogear/android/pipe/module/AuthorizationFields = Org.Jboss.Aerogear.Android.Pipe.Module.AuthorizationFields
  <init>()V = .ctor()
  getHeaders()Ljava/util/List; = Headers
  setHeaders(Ljava/util/List;)V = Headers
  getQueryParameters()Ljava/util/List; = QueryParameters
  setQueryParameters(Ljava/util/List;)V = QueryParameters
  addHeader(Ljava/lang/String;Ljava/lang/String;)V = AddHeader(string, string)
  addQueryParameter(Ljava/lang/String;Ljava/lang/String;)V = AddQueryParameter(string, string)
org/jboss/aerogear/android/pipe/module/ModuleFields = Org.Jboss.Aerogear.Android.Pipe.Module.ModuleFields
  <init>()V = .ctor()
  getHeaders()Ljava/util/List; = Headers
  setHeaders(Ljava/util/List;)V = Headers
  getQueryParameters()Ljava/util/List; = QueryParameters
  setQueryParameters(Ljava/util/List;)V = QueryParameters
  addHeader(Ljava/lang/String;Ljava/lang/String;)V = AddHeader(string, string)
  addQueryParameter(Ljava/lang/String;Ljava/lang/String;)V = AddQueryParameter(string, string)
org/jboss/aerogear/android/pipe/module/PipeModule = Org.Jboss.Aerogear.Android.Pipe.Module.IPipeModule
  handleError(Lorg/jboss/aerogear/android/pipe/http/HttpException;)Z = HandleError(Org.Jboss.Aerogear.Android.Pipe.Http.HttpException)
  loadModule(Ljava/net/URI;Ljava/lang/String;[B)Lorg/jboss/aerogear/android/pipe/module/ModuleFields; = LoadModule(Java.Net.URI, string, byte[])
org/jboss/aerogear/android/pipe/paging/DefaultParameterProvider = Org.Jboss.Aerogear.Android.Pipe.Paging.DefaultParameterProvider
  <init>()V = .ctor()
org/jboss/aerogear/android/pipe/paging/MetadataLocation = Org.Jboss.Aerogear.Android.Pipe.Paging.IMetadataLocation
org/jboss/aerogear/android/pipe/paging/PageConfig = Org.Jboss.Aerogear.Android.Pipe.Paging.PageConfig
  <init>()V = .ctor()
  getLimitValue()Ljava/lang/Integer; = LimitValue
  setLimitValue(Ljava/lang/Integer;)V = LimitValue
  getMetadataLocation()Lorg/jboss/aerogear/android/pipe/paging/MetadataLocation; = MetadataLocation
  setMetadataLocation(Lorg/jboss/aerogear/android/pipe/paging/MetadataLocation;)V = MetadataLocation
  getNextIdentifier()Ljava/lang/String; = NextIdentifier
  setNextIdentifier(Ljava/lang/String;)V = NextIdentifier
  getOffsetValue()Ljava/lang/String; = OffsetValue
  setOffsetValue(Ljava/lang/String;)V = OffsetValue
  getPreviousIdentifier()Ljava/lang/String; = PreviousIdentifier
  setPreviousIdentifier(Ljava/lang/String;)V = PreviousIdentifier
org/jboss/aerogear/android/pipe/paging/URIBodyPageParser = Org.Jboss.Aerogear.Android.Pipe.Paging.URIBodyPageParser
  <init>()V = .ctor()
  <init>(Ljava/net/URI;)V = .ctor(Java.Net.URI)
  <init>(Ljava/net/URL;)V = .ctor(Java.Net.URL)
org/jboss/aerogear/android/pipe/paging/URIPageHeaderParser = Org.Jboss.Aerogear.Android.Pipe.Paging.URIPageHeaderParser
  <init>()V = .ctor()
  <init>(Ljava/net/URI;)V = .ctor(Java.Net.URI)
  <init>(Ljava/net/URL;)V = .ctor(Java.Net.URL)
org/jboss/aerogear/android/pipe/paging/WebLink = Org.Jboss.Aerogear.Android.Pipe.Paging.WebLink
  <init>(Ljava/lang/String;)V = .ctor(string)
  getParameters()Ljava/util/Map; = Parameters
  getUri()Ljava/lang/String; = Uri
org/jboss/aerogear/android/pipe/paging/WrappingPagedList = Org.Jboss.Aerogear.Android.Pipe.Paging.WrappingPagedList
org/jboss/aerogear/android/pipe/PipeConfiguration = Org.Jboss.Aerogear.Android.Pipe.PipeConfiguration
  <init>()V = .ctor()
  getModules()Ljava/util/List; = Modules
  getName()Ljava/lang/String; = Name
  module(Lorg/jboss/aerogear/android/pipe/module/PipeModule;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = Module(Org.Jboss.Aerogear.Android.Pipe.Module.IPipeModule)
  setName(Ljava/lang/String;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = SetName(string)
  withUrl(Ljava/net/URL;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = WithUrl(Java.Net.URL)
org/jboss/aerogear/android/pipe/PipeManager = Org.Jboss.Aerogear.Android.Pipe.PipeManager
  config(Ljava/lang/String;Ljava/lang/Class;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = Config(string, Java.Lang.Class)
org/jboss/aerogear/android/pipe/RequestBuilder = Org.Jboss.Aerogear.Android.Pipe.IRequestBuilder
  getContentType()Ljava/lang/String; = ContentType
  getMarshallingConfig()Lorg/jboss/aerogear/android/pipe/MarshallingConfig; = MarshallingConfig
  getBody(Ljava/lang/Object;)[B = GetBody(Java.Lang.Object)
org/jboss/aerogear/android/pipe/ResponseParser = Org.Jboss.Aerogear.Android.Pipe.IResponseParser
  getMarshallingConfig()Lorg/jboss/aerogear/android/pipe/MarshallingConfig; = MarshallingConfig
  handleResponse(Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody;Ljava/lang/Class;)Ljava/util/List; = HandleResponse(Org.Jboss.Aerogear.Android.Pipe.Http.HeaderAndBody, Java.Lang.Class)
org/jboss/aerogear/android/pipe/rest/gson/GsonRequestBuilder = Org.Jboss.Aerogear.Android.Pipe.Rest.Gson.GsonRequestBuilder
  <init>()V = .ctor()
  <init>(Lcom/google/gson/Gson;)V = .ctor(GoogleGson.Gson)
  CONTENT_TYPE = ContentType
  getContentType()Ljava/lang/String; = ContentType
  getMarshallingConfig()Lorg/jboss/aerogear/android/pipe/MarshallingConfig; = MarshallingConfig
  setMarshallingConfig(Lorg/jboss/aerogear/android/pipe/MarshallingConfig;)V = MarshallingConfig
  getBody(Ljava/lang/Object;)[B = GetBody(Java.Lang.Object)
org/jboss/aerogear/android/pipe/rest/gson/GsonResponseParser = Org.Jboss.Aerogear.Android.Pipe.Rest.Gson.GsonResponseParser
  <init>()V = .ctor()
  <init>(Lcom/google/gson/Gson;)V = .ctor(GoogleGson.Gson)
  getMarshallingConfig()Lorg/jboss/aerogear/android/pipe/MarshallingConfig; = MarshallingConfig
  setMarshallingConfig(Lorg/jboss/aerogear/android/pipe/MarshallingConfig;)V = MarshallingConfig
  handleResponse(Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody;Ljava/lang/Class;)Ljava/util/List; = HandleResponse(Org.Jboss.Aerogear.Android.Pipe.Http.HeaderAndBody, Java.Lang.Class)
org/jboss/aerogear/android/pipe/rest/multipart/MultipartRequestBuilder = Org.Jboss.Aerogear.Android.Pipe.Rest.Multipart.MultipartRequestBuilder
  <init>()V = .ctor()
  getContentType()Ljava/lang/String; = ContentType
  getMarshallingConfig()Lorg/jboss/aerogear/android/pipe/MarshallingConfig; = MarshallingConfig
  setMarshallingConfig(Lorg/jboss/aerogear/android/pipe/MarshallingConfig;)V = MarshallingConfig
  getBody(Ljava/lang/Object;)[B = GetBody(Java.Lang.Object)
org/jboss/aerogear/android/pipe/rest/multipart/TypeAndStream = Org.Jboss.Aerogear.Android.Pipe.Rest.Multipart.TypeAndStream
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V = .ctor(string, string, System.IO.Stream)
  getFileName()Ljava/lang/String; = FileName
  getInputStream()Ljava/io/InputStream; = InputStream
  getMimeType()Ljava/lang/String; = MimeType
org/jboss/aerogear/android/pipe/rest/RestAdapter = Org.Jboss.Aerogear.Android.Pipe.Rest.RestAdapter
  <init>(Ljava/lang/Class;Ljava/net/URL;)V = .ctor(Java.Lang.Class, Java.Net.URL)
  <init>(Ljava/lang/Class;Ljava/net/URL;Lorg/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration;)V = .ctor(Java.Lang.Class, Java.Net.URL, Org.Jboss.Aerogear.Android.Pipe.Rest.RestfulPipeConfiguration)
  THREAD_POOL_EXECUTOR = ThreadPoolExecutor
  getKlass()Ljava/lang/Class; = Klass
  getRequestBuilder()Lorg/jboss/aerogear/android/pipe/RequestBuilder; = RequestBuilder
  getResponseParser()Lorg/jboss/aerogear/android/pipe/ResponseParser; = ResponseParser
  getUrl()Ljava/net/URL; = Url
org/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration = Org.Jboss.Aerogear.Android.Pipe.Rest.RestfulPipeConfiguration
  <init>()V = .ctor()
  getModules()Ljava/util/List; = Modules
  getPageConfig()Lorg/jboss/aerogear/android/pipe/paging/PageConfig; = PageConfig
  getRequestBuilder()Lorg/jboss/aerogear/android/pipe/RequestBuilder; = RequestBuilder
  getResponseParser()Lorg/jboss/aerogear/android/pipe/ResponseParser; = ResponseParser
  getTimeout()Ljava/lang/Integer; = Timeout
  getUrl()Ljava/net/URL; = Url
  pageConfig(Lorg/jboss/aerogear/android/pipe/paging/PageConfig;)Lorg/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration; = InvokePageConfig(Org.Jboss.Aerogear.Android.Pipe.Paging.PageConfig)
  requestBuilder(Lorg/jboss/aerogear/android/pipe/RequestBuilder;)Lorg/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration; = InvokeRequestBuilder(Org.Jboss.Aerogear.Android.Pipe.IRequestBuilder)
  responseParser(Lorg/jboss/aerogear/android/pipe/ResponseParser;)Lorg/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration; = InvokeResponseParser(Org.Jboss.Aerogear.Android.Pipe.IResponseParser)
  timeout(Ljava/lang/Integer;)Ljava/lang/Object; = InvokeTimeout(Java.Lang.Integer)
  module(Lorg/jboss/aerogear/android/pipe/module/PipeModule;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = Module(Org.Jboss.Aerogear.Android.Pipe.Module.IPipeModule)
  withUrl(Ljava/net/URL;)Lorg/jboss/aerogear/android/pipe/PipeConfiguration; = WithUrl(Java.Net.URL)
org/jboss/aerogear/android/pipe/rest/RestfulPipeConfigurationProvider = Org.Jboss.Aerogear.Android.Pipe.Rest.RestfulPipeConfigurationProvider
  <init>()V = .ctor()
  newConfiguration()Lorg/jboss/aerogear/android/pipe/rest/RestfulPipeConfiguration; = NewConfiguration()
org/jboss/aerogear/android/pipe/rest/RestRunner = Org.Jboss.Aerogear.Android.Pipe.Rest.RestRunner
  <init>(Ljava/lang/Class;Ljava/net/URL;)V = .ctor(Java.Lang.Class, Java.Net.URL)
  getRequestBuilder()Lorg/jboss/aerogear/android/pipe/RequestBuilder; = RequestBuilder
  onRawSave(Ljava/lang/String;[B)Lorg/jboss/aerogear/android/pipe/http/HeaderAndBody; = OnRawSave(string, byte[])
  onRemove(Ljava/lang/String;)V = OnRemove(string)
org/jboss/aerogear/android/pipe/util/ClassUtils = Org.Jboss.Aerogear.Android.Pipe.Util.ClassUtils
  <init>()V = .ctor()
  asArrayClass(Ljava/lang/Class;)Ljava/lang/Class; = AsArrayClass(Java.Lang.Class)
org/jboss/aerogear/android/pipe/util/ParseException = Org.Jboss.Aerogear.Android.Pipe.Util.ParseException
  <init>(Ljava/lang/String;)V = .ctor(string)
org/jboss/aerogear/android/pipe/util/UrlUtils = Org.Jboss.Aerogear.Android.Pipe.Util.UrlUtils
  appendQueryToBaseURL(Ljava/net/URL;Ljava/lang/String;)Ljava/net/URL; = AppendQueryToBaseURL(Java.Net.URL, string)
  appendToBaseURL(Ljava/net/URL;Ljava/lang/String;)Ljava/net/URL; = AppendToBaseURL(Java.Net.URL, string)
org/jboss/aerogear/android/pipe/util/WebLinkParser = Org.Jboss.Aerogear.Android.Pipe.Util.WebLinkParser
  <init>()V = .ctor()
  parse(Ljava/lang/String;)Ljava/util/List; = Parse(string)
